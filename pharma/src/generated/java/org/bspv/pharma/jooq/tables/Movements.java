/*
 * This file is generated by jOOQ.
 */
package org.bspv.pharma.jooq.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.bspv.pharma.jooq.Indexes;
import org.bspv.pharma.jooq.Keys;
import org.bspv.pharma.jooq.Public;
import org.bspv.pharma.jooq.tables.records.MovementsRecord;
import org.bspv.pharma.repository.jooq.converter.OffsetDateTimeConverter;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Movements extends TableImpl<MovementsRecord> {

    private static final long serialVersionUID = 2048914641;

    /**
     * The reference instance of <code>public.movements</code>
     */
    public static final Movements MOVEMENTS = new Movements();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MovementsRecord> getRecordType() {
        return MovementsRecord.class;
    }

    /**
     * The column <code>public.movements.id</code>.
     */
    public final TableField<MovementsRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.movements.created_by</code>.
     */
    public final TableField<MovementsRecord, UUID> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.movements.created_date</code>.
     */
    public final TableField<MovementsRecord, OffsetDateTime> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new OffsetDateTimeConverter());

    /**
     * The column <code>public.movements.goods_id</code>.
     */
    public final TableField<MovementsRecord, UUID> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.movements.location_id</code>.
     */
    public final TableField<MovementsRecord, UUID> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.movements.quantity</code>.
     */
    public final TableField<MovementsRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.movements.reason</code>.
     */
    public final TableField<MovementsRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>public.movements.value_date</code>.
     */
    public final TableField<MovementsRecord, OffsetDateTime> VALUE_DATE = createField("value_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new OffsetDateTimeConverter());

    /**
     * The column <code>public.movements.responsible_user</code>.
     */
    public final TableField<MovementsRecord, UUID> RESPONSIBLE_USER = createField("responsible_user", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.movements.linked_movement_id</code>.
     */
    public final TableField<MovementsRecord, UUID> LINKED_MOVEMENT_ID = createField("linked_movement_id", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.movements.linked_order_id</code>.
     */
    public final TableField<MovementsRecord, UUID> LINKED_ORDER_ID = createField("linked_order_id", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * Create a <code>public.movements</code> table reference
     */
    public Movements() {
        this(DSL.name("movements"), null);
    }

    /**
     * Create an aliased <code>public.movements</code> table reference
     */
    public Movements(String alias) {
        this(DSL.name(alias), MOVEMENTS);
    }

    /**
     * Create an aliased <code>public.movements</code> table reference
     */
    public Movements(Name alias) {
        this(alias, MOVEMENTS);
    }

    private Movements(Name alias, Table<MovementsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Movements(Name alias, Table<MovementsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Movements(Table<O> child, ForeignKey<O, MovementsRecord> key) {
        super(child, key, MOVEMENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MOVEMENTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MovementsRecord> getPrimaryKey() {
        return Keys.MOVEMENTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MovementsRecord>> getKeys() {
        return Arrays.<UniqueKey<MovementsRecord>>asList(Keys.MOVEMENTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MovementsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MovementsRecord, ?>>asList(Keys.MOVEMENTS__FK_MOVEMENTS__GOODS__1, Keys.MOVEMENTS__FK_MOVEMENTS__LOCATIONS__1, Keys.MOVEMENTS__FK_MOVEMENTS__MOVEMENTS__1, Keys.MOVEMENTS__FK_MOVEMENTS__ORDERS__1);
    }

    public Goods goods() {
        return new Goods(this, Keys.MOVEMENTS__FK_MOVEMENTS__GOODS__1);
    }

    public Locations locations() {
        return new Locations(this, Keys.MOVEMENTS__FK_MOVEMENTS__LOCATIONS__1);
    }

    public org.bspv.pharma.jooq.tables.Movements movements() {
        return new org.bspv.pharma.jooq.tables.Movements(this, Keys.MOVEMENTS__FK_MOVEMENTS__MOVEMENTS__1);
    }

    public Orders orders() {
        return new Orders(this, Keys.MOVEMENTS__FK_MOVEMENTS__ORDERS__1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Movements as(String alias) {
        return new Movements(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Movements as(Name alias) {
        return new Movements(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Movements rename(String name) {
        return new Movements(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Movements rename(Name name) {
        return new Movements(name, null);
    }
}
