/*
 * This file is generated by jOOQ.
 */
package org.bspv.pharma.jooq.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Generated;

import org.bspv.pharma.jooq.tables.Orders;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record8<UUID, Long, UUID, OffsetDateTime, UUID, OffsetDateTime, String, String> {

    private static final long serialVersionUID = -1354201306;

    /**
     * Setter for <code>public.orders.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.orders.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.orders.version</code>.
     */
    public void setVersion(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.orders.version</code>.
     */
    public Long getVersion() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.orders.created_by</code>.
     */
    public void setCreatedBy(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.orders.created_by</code>.
     */
    public UUID getCreatedBy() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.orders.created_date</code>.
     */
    public void setCreatedDate(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.orders.created_date</code>.
     */
    public OffsetDateTime getCreatedDate() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>public.orders.last_modified_by</code>.
     */
    public void setLastModifiedBy(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.orders.last_modified_by</code>.
     */
    public UUID getLastModifiedBy() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.orders.last_modified_date</code>.
     */
    public void setLastModifiedDate(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.orders.last_modified_date</code>.
     */
    public OffsetDateTime getLastModifiedDate() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.orders.internal_comment</code>.
     */
    public void setInternalComment(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.orders.internal_comment</code>.
     */
    public String getInternalComment() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.orders.external_comment</code>.
     */
    public void setExternalComment(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.orders.external_comment</code>.
     */
    public String getExternalComment() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<UUID, Long, UUID, OffsetDateTime, UUID, OffsetDateTime, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<UUID, Long, UUID, OffsetDateTime, UUID, OffsetDateTime, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Orders.ORDERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Orders.ORDERS.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field3() {
        return Orders.ORDERS.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field4() {
        return Orders.ORDERS.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field5() {
        return Orders.ORDERS.LAST_MODIFIED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field6() {
        return Orders.ORDERS.LAST_MODIFIED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Orders.ORDERS.INTERNAL_COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Orders.ORDERS.EXTERNAL_COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component4() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component5() {
        return getLastModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component6() {
        return getLastModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getInternalComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getExternalComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value4() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value5() {
        return getLastModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value6() {
        return getLastModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getInternalComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getExternalComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value2(Long value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value3(UUID value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value4(OffsetDateTime value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value5(UUID value) {
        setLastModifiedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value6(OffsetDateTime value) {
        setLastModifiedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value7(String value) {
        setInternalComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value8(String value) {
        setExternalComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord values(UUID value1, Long value2, UUID value3, OffsetDateTime value4, UUID value5, OffsetDateTime value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(UUID id, Long version, UUID createdBy, OffsetDateTime createdDate, UUID lastModifiedBy, OffsetDateTime lastModifiedDate, String internalComment, String externalComment) {
        super(Orders.ORDERS);

        set(0, id);
        set(1, version);
        set(2, createdBy);
        set(3, createdDate);
        set(4, lastModifiedBy);
        set(5, lastModifiedDate);
        set(6, internalComment);
        set(7, externalComment);
    }
}
