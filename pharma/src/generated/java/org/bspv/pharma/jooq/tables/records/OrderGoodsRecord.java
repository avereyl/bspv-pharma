/*
 * This file is generated by jOOQ.
 */
package org.bspv.pharma.jooq.tables.records;


import java.util.UUID;

import javax.annotation.Generated;

import org.bspv.pharma.jooq.tables.OrderGoods;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderGoodsRecord extends UpdatableRecordImpl<OrderGoodsRecord> implements Record4<UUID, UUID, Long, Long> {

    private static final long serialVersionUID = 104904491;

    /**
     * Setter for <code>public.order_goods.order_id</code>.
     */
    public void setOrderId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order_goods.order_id</code>.
     */
    public UUID getOrderId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.order_goods.goods_id</code>.
     */
    public void setGoodsId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order_goods.goods_id</code>.
     */
    public UUID getGoodsId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.order_goods.version</code>.
     */
    public void setVersion(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order_goods.version</code>.
     */
    public Long getVersion() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.order_goods.quantity</code>.
     */
    public void setQuantity(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.order_goods.quantity</code>.
     */
    public Long getQuantity() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, UUID, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, UUID, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return OrderGoods.ORDER_GOODS.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return OrderGoods.ORDER_GOODS.GOODS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return OrderGoods.ORDER_GOODS.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return OrderGoods.ORDER_GOODS.QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component2() {
        return getGoodsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getGoodsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderGoodsRecord value1(UUID value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderGoodsRecord value2(UUID value) {
        setGoodsId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderGoodsRecord value3(Long value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderGoodsRecord value4(Long value) {
        setQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderGoodsRecord values(UUID value1, UUID value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderGoodsRecord
     */
    public OrderGoodsRecord() {
        super(OrderGoods.ORDER_GOODS);
    }

    /**
     * Create a detached, initialised OrderGoodsRecord
     */
    public OrderGoodsRecord(UUID orderId, UUID goodsId, Long version, Long quantity) {
        super(OrderGoods.ORDER_GOODS);

        set(0, orderId);
        set(1, goodsId);
        set(2, version);
        set(3, quantity);
    }
}
