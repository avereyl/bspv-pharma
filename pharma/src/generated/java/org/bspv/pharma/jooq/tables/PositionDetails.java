/*
 * This file is generated by jOOQ.
 */
package org.bspv.pharma.jooq.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.bspv.pharma.jooq.Indexes;
import org.bspv.pharma.jooq.Keys;
import org.bspv.pharma.jooq.Public;
import org.bspv.pharma.jooq.tables.records.PositionDetailsRecord;
import org.bspv.pharma.repository.jooq.converter.OffsetDateTimeConverter;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PositionDetails extends TableImpl<PositionDetailsRecord> {

    private static final long serialVersionUID = -657057040;

    /**
     * The reference instance of <code>public.position_details</code>
     */
    public static final PositionDetails POSITION_DETAILS = new PositionDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PositionDetailsRecord> getRecordType() {
        return PositionDetailsRecord.class;
    }

    /**
     * The column <code>public.position_details.id</code>.
     */
    public final TableField<PositionDetailsRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.position_details.created_by</code>.
     */
    public final TableField<PositionDetailsRecord, UUID> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.position_details.created_date</code>.
     */
    public final TableField<PositionDetailsRecord, OffsetDateTime> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new OffsetDateTimeConverter());

    /**
     * The column <code>public.position_details.position_id</code>.
     */
    public final TableField<PositionDetailsRecord, UUID> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.position_details.validity_start_date</code>.
     */
    public final TableField<PositionDetailsRecord, OffsetDateTime> VALIDITY_START_DATE = createField("validity_start_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new OffsetDateTimeConverter());

    /**
     * The column <code>public.position_details.validity_end_date</code>.
     */
    public final TableField<PositionDetailsRecord, OffsetDateTime> VALIDITY_END_DATE = createField("validity_end_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new OffsetDateTimeConverter());

    /**
     * The column <code>public.position_details.value_date</code>.
     */
    public final TableField<PositionDetailsRecord, OffsetDateTime> VALUE_DATE = createField("value_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new OffsetDateTimeConverter());

    /**
     * The column <code>public.position_details.type_</code>.
     */
    public final TableField<PositionDetailsRecord, String> TYPE_ = createField("type_", org.jooq.impl.SQLDataType.VARCHAR(75).nullable(false), this, "");

    /**
     * The column <code>public.position_details.value_</code>.
     */
    public final TableField<PositionDetailsRecord, String> VALUE_ = createField("value_", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>public.position_details</code> table reference
     */
    public PositionDetails() {
        this(DSL.name("position_details"), null);
    }

    /**
     * Create an aliased <code>public.position_details</code> table reference
     */
    public PositionDetails(String alias) {
        this(DSL.name(alias), POSITION_DETAILS);
    }

    /**
     * Create an aliased <code>public.position_details</code> table reference
     */
    public PositionDetails(Name alias) {
        this(alias, POSITION_DETAILS);
    }

    private PositionDetails(Name alias, Table<PositionDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PositionDetails(Name alias, Table<PositionDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PositionDetails(Table<O> child, ForeignKey<O, PositionDetailsRecord> key) {
        super(child, key, POSITION_DETAILS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POSITION_DETAILS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PositionDetailsRecord> getPrimaryKey() {
        return Keys.POSITION_DETAILS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PositionDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<PositionDetailsRecord>>asList(Keys.POSITION_DETAILS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PositionDetailsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PositionDetailsRecord, ?>>asList(Keys.POSITION_DETAILS__FK_POSITION_DETAILS__POSITIONS__1);
    }

    public Positions positions() {
        return new Positions(this, Keys.POSITION_DETAILS__FK_POSITION_DETAILS__POSITIONS__1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PositionDetails as(String alias) {
        return new PositionDetails(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PositionDetails as(Name alias) {
        return new PositionDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PositionDetails rename(String name) {
        return new PositionDetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PositionDetails rename(Name name) {
        return new PositionDetails(name, null);
    }
}
